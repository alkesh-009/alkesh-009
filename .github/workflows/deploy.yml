name: Build and Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: testing/node-hello-world
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::403395453326:role/node-hello-world-github-deploy-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to ECR
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Print image URI
        run: echo "Deploying image: $IMAGE_URI"

      - name: Fill in ECS task definition
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          sed "s|REPLACE_ME|$IMAGE_URI|" taskdef.json > taskdef-filled.json

      - name: Register ECS task definition
        id: register-task
        run: |
          TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://taskdef-filled.json --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Deploy updated task to ECS
        run: |
          aws ecs update-service \
            --cluster node-hello-cluster \
            --service node-hello-service \
            --task-definition ${{ env.TASK_DEF_ARN }} \
            --force-new-deployment
